#include<bits/stdc++.h>
#define size 100

using namespace std;

///global variables
int i,j,k, a[size][2], last=0,num=0,sum=0, flag=0;
int front=-1, val=0;

///diclaration of functions
void read();
void compare();
void menu();
void display();
void del();

int main ()
{
    int ch;
    
    for(;;)
    {
        menu();
         cin>>ch;
   
        if(ch == 1)
        {
            read();
            compare();
            display();
        }
        else if(ch==2)
        {   
            del();
            display();
        }
        else if(ch==3)
            break;
        else
            cout<<"Invalid"<<endl;
    }
 
    return 0;
}


void read ()
{
    int n=0;
    cout<<"How many you want to insert: ";
    cin>> n;
    
    val= front;         //value of front for checking if its -1
    
    sum=num+n;          //limit for the loop to extend in every insert
    for (i=last; i<sum; i++)
    {  
        cout<<"Enter time with money: ";
        for(j=0; j<2; j++)
        {
            cin>>a[i][j];
        }
        front++;        //for deleting its a count for inserted elements
    }
    
    last=i;             //keeping the last index after an insertion
    num=sum;            //keeping the limit after an execution
    flag++;             

     
    
}

void del()
{
    if(front==-1)
        cout<<"No elements to delete..."<<endl;
    else
    {
        for(i=0; i<sum-1; i++)
        {
            for(j=0;j<2;j++)
            {
                a[i][j]=a[i+1][j];
            }
        }
        sum=sum-1;      //all the values of read function is decreasing with each delete
        last--;
        num--;
        front--;
        cout<<"Deletion successful..."<<endl;
       
    }
}


void compare()
{
    int temp, temp2;

   for(i = 1;i<sum; i++)        //bubble sort index begins with 1
    {
        for (k = 1; k <sum-i; k++)
        {
           if(a[k][0]>a[k+1][0])
            {
                for(j=0; j<2; j++)
                {
                    temp= a[k][j];
                    a[k][j]= a[k+1][j];
                    a[k+1][j]=temp;
                }
                
            }
            
            if(a[k][0] == a[k+1][0] && a[k][1]<a[k+1][1])
            {//checking the money if time is same  
                temp2= a[k][1];
                a[k][1]=a[k+1][1];
                a[k+1][1]=temp2;
            }
        }
    }  
}

void menu()
{
        cout<<endl<<"***\tMENU\t***"<<endl;
        cout<<"Press 1 to enqueue"<<endl;
        cout<<"Press 2 to delete"<<endl;
        cout<<"Press 3 to Exit!!!"<<endl<<endl;
        cout<<"Enter choice: "<<endl;
}


void display()
{
    if(front==-1)
        cout<<"Queue Empty!!!"<<endl;
    else
    {
        cout<<endl<<"Work execution queue time with money: "<<endl; 
        for (i=0; i<sum; i++)
        {
            for(j=0; j<2; j++)
            {
                cout<<a[i][j]<<" ";
            }
            cout<<endl;
        }
    }
}


